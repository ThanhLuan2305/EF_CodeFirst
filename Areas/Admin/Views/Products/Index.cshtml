@model IEnumerable<EF_CodeFirst.Models.Product>

@{
    ViewBag.Title = "Index";
}

@{
    string iconClass = "";
    if (ViewBag.IconClass == "fa-sort-desc")
    {
        iconClass = "fa-sort-asc";
    }
    else
    {
        iconClass = "fa-sort-desc";
    }
}

<h2>Product</h2>
<a href="/admin/products/create">Create new product</a>
<form class="d-flex flex-row align-items-center flex-wrap"
      action="/admin/products/index">
    <label for="search" class="mx-2 my-1 ">Search</label>
    <input type="search"
           class="form-control w-auto"
           id="search"
           name="search"
           value="@ViewBag.TB"
           placeholder="Search" />
    <button type="submit" class="btn btn-primary mx-2">Search</button>
</form>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            <a href="/admin/products/index?SortColumn=ProductID&IconClass=@iconClass&page=1">@Html.DisplayNameFor(model => model.ProductID)</a>
            @if (ViewBag.SortColumn == "ProductID")
            {
                <i class="fa @ViewBag.IconClass"></i>
            }
        </th>
        <th>
            <a href="/admin/products/index?SortColumn=ProductName&IconClass=@iconClass&page=1">@Html.DisplayNameFor(model => model.ProductName)</a>
            @if (ViewBag.SortColumn == "ProductName")
            {
                <i class="fa @ViewBag.IconClass"></i>
            }

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfPurchase)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AvailabilityStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand.BrandName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductID)
            </td>
            <td>
                @Html.ActionLink(@Html.DisplayFor(modelItem => item.ProductName).ToString(), "Detail", new
           {
               id = item.ProductID,
                    controller = "Products"
           })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfPurchase)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvailabilityStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand.BrandName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductID, controller = "Products", area = "Admin" }) |
                @Html.ActionLink("Details", "Detail", new { id = item.ProductID, controller = "Products", area = "Admin" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ProductID, controller = "Products", area = "Admin" })
            </td>
        </tr>
    }
    <tr>
        <td colspan="9">
            @{
                int PrevPage = ViewBag.Page - 1;
                if (PrevPage <= 0)
                {
                    PrevPage = 1;
                }
                int NextPage = ViewBag.Page + 1;
                if (NextPage > ViewBag.NoOfPages)
                {
                    NextPage = ViewBag.NoOfPages;
                }
                int FirstPage = 1;
                int EndPage = ViewBag.NoOfPages;
            }
            <ul class="pagination justify-content-center>
                <li class="page-item">
                    <a class="page-link" href="/admin/products/index?SortColumn=@ViewBag.SortColumn&IconClass=@ViewBag.IconClass&page=@FirstPage">
                        FirstPage
                    </a>
                </li>
                <li class="page-item active">
                    <a class="page-link" href="/admin/products/index?SortColumn=@ViewBag.SortColumn&IconClass=@ViewBag.IconClass&page=@PrevPage">
                        PrevPage
                    </a>
                </li>
                @for (int i = 0; i < ViewBag.NoOfPages; i++)
                {
                    if (i + 1 == ViewBag.Page)
                    {
                        <li class="page-item active">
                            <a class="page-link" href="/admin/products/index?SortColumn=@ViewBag.SortColumn&IconClass=@ViewBag.IconClass&page=@(i+1)">
                                @(i+1)
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="/admin/products/index?SortColumn=@ViewBag.SortColumn&IconClass=@ViewBag.IconClass&page=@(i+1)">
                                @(i+1)
                            </a>
                        </li>
                    }

                }
                <li class="page-item">
                    <a class="page-link" href="/admin/products/index?SortColumn=@ViewBag.SortColumn&IconClass=@ViewBag.IconClass&page=@NextPage">
                        NextPage
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="/admin/products/index?SortColumn=@ViewBag.SortColumn&IconClass=@ViewBag.IconClass&page=@EndPage">
                        EndPage
                    </a>
                </li>
            </ul>
        </td>
    </tr>

</table>
